@page "/Signup"
@model TelerikAspNetCoreApp1.Areas.Login.Pages.RegisterModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Register";
    Layout = "Shared/_SignInLayout.cshtml";
    var token = Xsrf.GetAndStoreTokens(HttpContext).RequestToken;
}
<div class="form-container k-d-flex-col k-align-items-center k-justify-content-center">
    <div>
        <img src="@Url.Content("~/assets/signin/signin.svg")" />
        <div class="signin k-justify-content-center">Sign Up</div>
        <div class="register k-d-flex-row k-justify-content-evenly"><span>Already have an account?</span> <a class="k-link" asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Sign In</a></div>
    </div>
    @(Html.Kendo().Form<RegisterModel.InputModel>()
                .Name("Register")
                .FormData(Model.Input)
                .Layout("grid")
                .Grid(g => g.Cols(1).Gutter(5))
                .HtmlAttributes(new { method = "POST", style= "width: 100%;" })
                .Items(items =>
                {
                    items.Add()
                        .Field(f => f.FullName).Label("Full Name");
                    items.Add()
                        .Field(f => f.Email)
                        .Label(l => l.Text("Email"));
                    items.Add()
                        .Field(f => f.Password)
                        .Label(l => l.Text("Password"))
                        .EditorTemplateHandler("setPasswordEditor");
                    items.Add()
                       .Field(f => f.Company)
                       .Label(l => l.Text("Company"));
                    items.Add()
                        .Field(f => f.AgreeToTerms)
                        .Label(l=>l.Text("<span>I agree to the <a class=\"k-link\" href=\"#\">Terms of Services</a> and <a class=\"k-link\" href=\"#\">Privacy Policy<a/></span>").Encoded(false));
                })
                .ButtonsTemplate("<button class='k-button k-button-md k-rounded-md k-button-solid-primary' style='width:100%'>Create free account</button>")
            )
</div>
<style>
    .form-container {
        width: 270px;
    }

        .form-container > div > span {
            display: inherit;
            position: static;
            width: 75px;
            left: calc(50% - 75px/2 + 97.5px);
            border: 1px solid #8F8F8F;
        }

    .signin {
        display: flex;
        font-weight: 300;
        font-size: 56px;
        line-height: 67px;
    }

    .register {
        display: flex;
        align-items: center;
        gap: 18px;
    }

    #Register > div.k-form-layout.k-d-grid.k-grid-cols-1 > div:nth-child(5) {
        display: flex;
    }

    #AgreeToTerms-form-label {
        order: 1;
        padding-left: 0.5em;
    }
</style>
<script>
    function setPasswordEditor(container, options) {
        container.append($("<input type='password' class='k-textbox k-valid' id='Password' name='Password' title='Password' required='required' autocomplete='off' aria-labelledby='Password-form-label' data-bind='value:Password' aria-describedby='Password-form-hint'>"));
    }
    $("#Register").append($("<input type='hidden' name='__RequestVerificationToken' value='@token' data-stop='true' />"))
</script>